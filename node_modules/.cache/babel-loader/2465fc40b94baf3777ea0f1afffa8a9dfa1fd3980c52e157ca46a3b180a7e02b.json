{"ast":null,"code":"var _jsxFileName = \"/Users/temirlan.kanafin/Desktop/react-projects/test-project-shop/src/components/TodoList/index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport styles from './TodoList.module.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TodoList = ({\n  selectedShop,\n  todoList,\n  updateTodoList\n}) => {\n  _s();\n  const [todoItem, setTodoItem] = useState(\"\");\n  const handleAddTodo = () => {\n    if (todoItem.trim() !== \"\") {\n      const newTodoList = [...todoList, todoItem];\n      updateTodoList(selectedShop.id, newTodoList);\n      setTodoItem(\"\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.root,\n    children: selectedShop && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.rootBlock,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"TODO List for \", selectedShop.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.rootContent,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: todoItem,\n          onChange: e => setTodoItem(e.target.value),\n          placeholder: \"Enter item to buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: e => handleAddTodo(),\n          children: \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: styles.rootList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 7\n  }, this);\n};\n_s(TodoList, \"bpebPNTNSLqgCH8MuN3uPsASxtY=\");\n_c = TodoList;\nexport default TodoList;\nvar _c;\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"names":["React","useState","styles","jsxDEV","_jsxDEV","TodoList","selectedShop","todoList","updateTodoList","_s","todoItem","setTodoItem","handleAddTodo","trim","newTodoList","id","className","root","children","rootBlock","name","fileName","_jsxFileName","lineNumber","columnNumber","rootContent","type","value","onChange","e","target","placeholder","onClick","rootList","_c","$RefreshReg$"],"sources":["/Users/temirlan.kanafin/Desktop/react-projects/test-project-shop/src/components/TodoList/index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport styles from './TodoList.module.scss'\n\nconst TodoList = ({ selectedShop, todoList, updateTodoList }) => {\n   const [todoItem, setTodoItem] = useState(\"\");\n\n   const handleAddTodo = () => {\n      if (todoItem.trim() !== \"\") {\n         const newTodoList = [...todoList, todoItem];\n         updateTodoList(selectedShop.id, newTodoList);\n         setTodoItem(\"\");\n      }\n   };\n   return (\n      <div className={styles.root}>\n         {selectedShop && (\n            <div className={styles.rootBlock}>\n               <h2>TODO List for {selectedShop.name}</h2>\n               <div className={styles.rootContent}>\n                  <input\n                     type=\"text\"\n                     value={todoItem}\n                     onChange={e => setTodoItem(e.target.value)}\n                     placeholder=\"Enter item to buy\"\n                  />\n                  <button onClick={(e) => handleAddTodo()}>Add</button>\n               </div>\n               <ul className={styles.rootList}>\n                  {/* {todoList['selectedShop.name'].map((todo, index) => (\n                     <li key={todo.name}> {todo}</li>\n                  ))} */}\n               </ul>\n            </div>\n         )}\n      </div>\n   );\n};\n\nexport default TodoList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,wBAAwB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,YAAY;EAAEC,QAAQ;EAAEC;AAAe,CAAC,KAAK;EAAAC,EAAA;EAC9D,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE5C,MAAMW,aAAa,GAAGA,CAAA,KAAM;IACzB,IAAIF,QAAQ,CAACG,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;MACzB,MAAMC,WAAW,GAAG,CAAC,GAAGP,QAAQ,EAAEG,QAAQ,CAAC;MAC3CF,cAAc,CAACF,YAAY,CAACS,EAAE,EAAED,WAAW,CAAC;MAC5CH,WAAW,CAAC,EAAE,CAAC;IAClB;EACH,CAAC;EACD,oBACGP,OAAA;IAAKY,SAAS,EAAEd,MAAM,CAACe,IAAK;IAAAC,QAAA,EACxBZ,YAAY,iBACVF,OAAA;MAAKY,SAAS,EAAEd,MAAM,CAACiB,SAAU;MAAAD,QAAA,gBAC9Bd,OAAA;QAAAc,QAAA,GAAI,gBAAc,EAACZ,YAAY,CAACc,IAAI;MAAA;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAC1CpB,OAAA;QAAKY,SAAS,EAAEd,MAAM,CAACuB,WAAY;QAAAP,QAAA,gBAChCd,OAAA;UACGsB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEjB,QAAS;UAChBkB,QAAQ,EAAEC,CAAC,IAAIlB,WAAW,CAACkB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UAC3CI,WAAW,EAAC;QAAmB;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjC,CAAC,eACFpB,OAAA;UAAQ4B,OAAO,EAAGH,CAAC,IAAKjB,aAAa,CAAC,CAAE;UAAAM,QAAA,EAAC;QAAG;UAAAG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACnD,CAAC,eACNpB,OAAA;QAAIY,SAAS,EAAEd,MAAM,CAAC+B;MAAS;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAI3B,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EACP;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEZ,CAAC;AAACf,EAAA,CAjCIJ,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAmCd,eAAeA,QAAQ;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}